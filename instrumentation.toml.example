# SPDX-License-Identifier: LGPL-2.1-or-later
# Copyright Â© 2017 ANSSI. All rights reserved.

# This is an example of an "instrumentation.toml" file intended to be dropped
# at the root of the CLIP OS source tree (i.e. the "repo" root).
#
# What is the purpose of this file?
#   When existing at the root of the CLIP OS source tree product repository,
#   this "drop-in" file changes the behavior of the product build actions (i.e.
#   the "build", "image", "configure" and "bundle" actions of the concerned
#   recipes) for providing the requied instrumentation feature to the built
#   product.
#
# Note 1:
#   By default, if no instrumentation feature is enabled in this file, then the
#   product will be built without instrumentation, as it would be in a normal
#   build intended for production use.
#
# Note 2:
#   If at least one instrumentation feature is specified in this file, then the
#   product version will be tainted with an "instrumented" tag as a SemVer
#   build metadata (e.g. "X.Y.Z+instrumented").
#
# For more information:
#   For an in-depth reference of the effects of all instrumentation features
#   proposed below, please refer to the appropriate page of the CLIP OS product
#   documentation:
#   <https://docs.clip-os.org/clipos/development.html#effect-of-instrumentation-levels>
#   The other products (i.e. CLIP OS derivatives) may implement or enhance
#   those product instrumentation features.

features = [
    # Install additional software development tools in the Core, such as Bash,
    # Vim, tmux, tree, strace, grep, ip, less, gdb, tcpdump, etc. (This is a
    # non-exhautive list, for the complete list please refer to the
    # "clipos-meta/clipos-core" ebuild):
    "instrumented-core",

    # Enable local and remote (SSH) root login without password
    #
    # Requires: "instrumented-core"
    "passwordless-root-login",

    # Configure SSH in order to allow a developer to log in as root (account
    # must be enabled with the appropriate instrumentation feature) via SSH and
    # without any password thanks to an installed SSH key pair (an SSH key pair
    # will be generated in the cache directory at first usage of this
    # instrumentation feature).
    #
    # Requires: "passwordless-root-login"
    "allow-ssh-root-login",

    # Configure the bootloader to provide handy features to developer (i.e.
    # "Reboot into firmware") and a greater timeout before loading the default
    # boot entry:
    "dev-friendly-bootloader",

    # Install additional software development tools in the initramfs, such as
    # strace, ltrace, less, grep, gdb, etc. (This is a non-exhautive list, for
    # the complete list please refer to the "clipos-meta/clipos-efiboot"
    # ebuild):
    #"instrumented-initramfs",

    # Lower Linux kernel security parameters at runtime.
    #"soften-kernel-configuration",

    # Do not require a TPM 2.0 for the LUKS disk partition decryption.
    # Therefore, in case of missing TPM 2.0, LUKS passphrase will be prompted
    # on the active console (either tty or serial console ttyS0):
    "initramfs-no-require-tpm",

    # Do not lockout TPM (brute-force attack protection) when interacting with
    # the TPM 2.0 (check out the TPM documentation for the "noDA" attribute and
    # for "dictionary attack protections"):
    "initramfs-no-tpm-lockout",

    # Activate alterations to initramfs/efiboot packages intended to ease their
    # debugging (e.g. debugging symbols):
    #"debuggable-initramfs",

    # Enable dracut breakpoints with interactive shell drop-outs:
    #
    # Important note:
    #   This feature requires multiple interactions on the console (or serial
    #   console for the QEMU target) to make the boot sequence proceed to the
    #   final pivot_root(2).
    #
    # Requires: "instrumented-initramfs"
    #"breakpointed-initramfs",

    # Spawn a persistent root interactive shell on a serial console or an tty
    # very early in the boot up sequence (right after the pivot_root(2) done by
    # the initramfs) in order to ease systemd debugging tasks. See
    # <https://freedesktop.org/wiki/Software/systemd/Debugging> for more
    # information.
    #
    # Requires: "instrumented-core"
    #"early-root-shell",

    # Activates features for debugging purposes in the kernel (KALLSYMS, core
    # dump production, etc.) with logging output sent on the serial port
    # (ttyS0) early on boot up sequence.
    #"debuggable-kernel",

    # Sets parameters on the kernel command line to make systemd very verbose
    # on the defined console output (ttyS0 serial port by default):
    #"verbose-systemd",

    # Configure systemd in order to install the systemd-coredump to allow
    # kernel produce core dump files.
    #
    # Requires: "debuggable-kernel"
    #"coredump-handler",
]

# vim: set ts=4 sts=4 sw=4 et ft=toml:
